function b=genQCHSH2NM(Beta,eta)Alpha = sqrt(1-(Beta^2));Psi = [Alpha;0;0;Beta];Rho = Psi*Psi';vecMA = cell(2,2);vecMA{1,1} = normalize_pure(sqrt(Beta)*[1;0] - sqrt(Alpha)*[0;1]);  vecMA{2,1} = normalize_pure(sqrt(Alpha)*[1;0] + sqrt(Beta)*[0;1]);  vecMA{1,2} = normalize_pure(sqrt(Beta)^3*[1;0] + sqrt(Alpha)^3*[0;1]);  vecMA{2,2} = normalize_pure(sqrt(Alpha)^3*[1;0] - sqrt(Beta)^3*[0;1]);  MA = cell(2,2);for x = 1:2  for u = 1:2    MA(u,x) = vecMA{u,x}*vecMA{u,x}';  endendvecMB = cell(2,2);vecMB{1,1} = normalize_pure(sqrt(Beta)^3*[1;0] - sqrt(Alpha)^3*[0;1]);  vecMB{2,1} = normalize_pure(sqrt(Alpha)^3*[1;0] + sqrt(Beta)^3*[0;1]);  vecMB{1,2} = normalize_pure(sqrt(Beta)*[1;0] + sqrt(Alpha)*[0;1]);  vecMB{2,2} = normalize_pure(sqrt(Alpha)*[1;0] - sqrt(Beta)*[0;1]);  MB = cell(2,2);for y = 1:2  for v = 1:2    MB(v,y) = vecMB{v,y}*vecMB{v,y}';  endendJoint_P = cell(2,2,2,2);for x = 1:2  for y = 1:2    for u = 1:2      for v = 1:2        Joint_P{u,v,x,y} = trace(Rho * kron(MA{u,x},MB{v,y}));      end    end  endendfor x = 1:2  for y = 1:2    sum = 0;    for u = 1:2      for v = 1:2        sum = sum+ Joint_P{u,v,x,y};      end    end  endendCHSH = - Joint_P{2,1,1,1} - Joint_P{1,1,1,2} - Joint_P{1,2,2,2} + Joint_P{1,1,2,1};Marg_PA = cell(2,2); for x = 1:2  for u = 1:2    Marg_PA{u,x} = trace(Rho * kron(MA{u,x},eye(2)));  endendMarg_PB = cell(2,2);for y = 1:2  for v = 1:2    Marg_PB{v,y} = trace(Rho * kron(eye(2),MB{v,y}));  endendetaB=eta;etaA=eta;Q =  ones(16, 25);for as1 = 0:1  for as2 = 0:1		as = 2 * as1 + as2;		for bs1 = 0:1			for bs2 = 0:1				bs = 2 * bs1 + bs2;				Q(4 * as + bs + 1, 25) = (1 - etaA)*(1-etaB);				for ao1 = 0:1					for ao2 = 0:1						ao = 2 * ao1 + ao2;            Q(4 * as + bs + 1 , 5 * ao + 5) = etaA*(1-etaB) * Marg_PA{ao1+1,as1+1}*Marg_PA{ao2+1,as2+1};          end        end        for bo1 = 0:1					for bo2 = 0:1						bo = 2 * bo1 + bo2;			      Q(4 * as + bs + 1 , 5 * 4 + bo + 1) = etaB*(1-etaA) * Marg_PB{bo1+1,bs1+1}*Marg_PB{bo2+1,bs2+1};;          end        end      end    end  endendfor as1 = 0:1  for as2 = 0:1		as = 2 * as1 + as2;		for bs1 = 0:1			for bs2 = 0:1				bs = 2 * bs1 + bs2;				Q(4 * as + bs + 1, 25) = (1 - etaA)*(1-etaB);				for ao1 = 0:1					for ao2 = 0:1						ao = 2 * ao1 + ao2;						for bo1 = 0:1							for bo2 = 0:1								bo = 2 * bo1 + bo2;								% Q(4 * (x - 1) + y, 5 * (stratA(x) - 1) + stratB(y))								Q(4 * as + bs + 1 , 5 * ao + bo + 1) =  etaA*etaB*Joint_P{ao1+1,bo1+1,as1+1,bs1+1}*Joint_P{ao2+1,bo2+1,as2+1,bs2+1};						  end						end					end				end			end		end	endendb = vec(Q)						b = reshape(Q, 1, []);endfunction