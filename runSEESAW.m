function [Joint_P,Marg_PA,Marg_PB,CHSH] = runSEESAW(Alpha,iter)    Beta = sqrt(1-(Alpha^2));   Psi = [Alpha;0;0;Beta];  Rho = Psi*Psi';  MA_sdp = cell(2,2);  MA = cell(2,2);    MB_sdp = cell(2,2);  MB = cell(2,2);    FmA = [];  FmB = [];    for x = 1:2    sum = 0;    for u = 1:2        MA_sdp{u,x} = sdpvar(2,2,'hermitian','complex');        FmA = [FmA; MA_sdp{u,x} >= 0;];        sum = sum + MA_sdp{u,x};    end    FmA = [FmA; sum == eye(2);];  end  for y = 1:2    sum = 0;    for v = 1:2        MB_sdp{v,y} = sdpvar(2,2,'hermitian','complex');        FmB = [FmB; MB_sdp{v,y} >= 0;];        sum = sum + MB_sdp{v,y};    end    FmB = [FmB; sum == eye(2);];  end  for y = 1:2    R = RandomPOVM(2,2);    for v = 1:2        MB{v,y} = R{v};    end  end  for tick = 1:iter% sdp for measurements.    stepMA = CH(Rho,MA_sdp,MB);    diagnostics = optimize([FmA;], -stepMA, sdpsettings('solver', 'sdpt3','verbose','0'));    for x = 1:2        for u = 1:2            MA{u,x} = value(MA_sdp{u,x});        end    end    printf('stepMA=%f \n',value(stepMA));% sdp for measurements.    stepMB = CH(Rho,MA,MB_sdp);    diagnostics = optimize([FmB;], -stepMB, sdpsettings('solver', 'sdpt3','verbose','0'));    for y = 1:2        for v = 1:2            MB{v,y} = value(MB_sdp{v,y});        end    end    printf('stepMB=%f \n',value(stepMB));  end  CHSH=value(stepMB)  Joint_P = cell(2,2,2,2);  for x = 1:2    for y = 1:2      for u = 1:2        for v = 1:2          Joint_P{u,v,x,y} = trace(Rho * kron(MA{u,x},MB{v,y}));        end      end    end  end  Marg_PA = cell(2,2);  for x = 1:2    for u = 1:2      Marg_PA{u,x} = trace(Rho * kron(MA{u,x},eye(2)));    end  end  Marg_PB = cell(2,2);  for y = 1:2    for v = 1:2      Marg_PB{v,y} = trace(Rho * kron(eye(2),MB{v,y}));   end  endendfunction  
